name: Build Evans Harmonic Isolator

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-x64
          - os: macos-13  # Intel mac
            platform: macos-intel
          - os: macos-14  # Apple Silicon mac
            platform: macos-arm64
          - os: windows-latest
            platform: windows-x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup CMake (Linux/Windows)
      if: runner.os != 'macOS'
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.20'

    - name: Setup CMake (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja

    - name: Build
      run: cmake --build build --config Release

    - name: List build output (debug)
      shell: bash
      run: |
        echo "Build directory contents:"
        find build -name "*.clap" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so" 2>/dev/null || true
        echo "Full build directory:"
        ls -la build/ || true

    - name: Upload plugin artifact
      uses: actions/upload-artifact@v4
      with:
        name: evans-harmonic-isolator-${{ matrix.platform }}
        path: |
          build/*.clap
          build/Release/*.clap
          build/Debug/*.clap
        retention-days: 30
        if-no-files-found: warn

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*.clap
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
